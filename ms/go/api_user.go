/*
 * PinArt Labels MS
 *
 * A labels microservice for PinArt system.
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"log"
	"net/http"
)

func DeleteUserLabel(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	w.WriteHeader(http.StatusAccepted)
}

func AddUserLabel(w http.ResponseWriter, r *http.Request) {
	db := dbConn()
	var user User
	// get the id
	idUser, val := getCode(r, 0)
	fmt.Println(val)
	user.Id = int64(idUser)
	// get the body
	body, err := ioutil.ReadAll(r.Body)
	defer r.Body.Close()
	if err != nil {
		log.Printf("Error reading body: %v", err)
		http.Error(w, "can't read body", http.StatusBadRequest)
		return
	}
	fmt.Printf("%s", body)
	var labels LabelsInput
	err = json.Unmarshal(body, &labels)
	if err != nil {
		http.Error(w, err.Error(), 500)
		return
	}
	// insert and get labels
	linkUser(user.Id, labels.RelatedLabels, db, w)
	// return struct board
	user.RelatedLabels = getLabels(labels.RelatedLabels, db, w)
	js, err := json.Marshal(user)
	if err != nil {
		http.Error(w, err.Error(), http.StatusInternalServerError)
		return
	}
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	w.WriteHeader(http.StatusAccepted)
	w.Write(js)
}

func GetLabelUser(w http.ResponseWriter, r *http.Request) {
	db := dbConn()
	code, val := getCode(r, 0)
	fmt.Println(val)
	var id Id
	id.Id = int64(code)
	var user User
	user.Id = id.Id
	user.RelatedLabels = getUserRelatedLabels(id.Id, db, w, r)
	js, err := json.Marshal(user)
	if err != nil {
		http.Error(w, err.Error(), http.StatusInternalServerError)
		return
	}
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	w.WriteHeader(http.StatusOK)
	w.Write(js)
}
