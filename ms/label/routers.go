/*
 * PinArt Labels MS
 *
 * A labels microservice for PinArt system.
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package label

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Welcome to the Labels microservice. Explore the other routes")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/",
		Index,
	},

	Route{
		"GetLabelUser",
		strings.ToUpper("get"),
		"/label/user/{id}",
		GetLabelUser,
	},

	Route{
		"SearchLabel",
		strings.ToUpper("get"),
		"/label/search",
		SearchLabel,
	},

	Route{
		"AddUserLabel",
		strings.ToUpper("Put"),
		"/label/user/{id}",
		AddUserLabel,
	},

	Route{
		"DeleteUserLabel",
		strings.ToUpper("Delete"),
		"/label/user/{id}",
		DeleteUserLabel,
	},

	Route{
		"AddBoardLabel",
		strings.ToUpper("Put"),
		"/label/board/{id}",
		AddBoardLabel,
	},

	Route{
		"GetLabelBoard",
		strings.ToUpper("Get"),
		"/label/board/{id}",
		GetLabelBoard,
	},

	Route{
		"AddLabel",
		strings.ToUpper("Put"),
		"/label",
		AddLabel,
	},

	Route{
		"DeleteLabel",
		strings.ToUpper("Delete"),
		"/label/{id}",
		DeleteLabel,
	},

	Route{
		"GetLabel",
		strings.ToUpper("Get"),
		"/label",
		GetLabel,
	},

	Route{
		"UpdateLabel",
		strings.ToUpper("Post"),
		"/label",
		UpdateLabel,
	},
}
